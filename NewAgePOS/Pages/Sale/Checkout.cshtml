@page "{saleid:min(1)}"
@model NewAgePOS.Pages.Sale.CheckoutModel
@{
  ViewData["Title"] = "Sales Checkout";
}

<partial name="_HeaderPartial" model="@Model.SaleId" />

@await Component.InvokeAsync("ItemList", new { saleId = @Model.SaleId })

<h4 class="mt-5 text-center">CUSTOMER INFO</h4>
@if (Model.Customer.EmailAddress == "guest@email.com")
{
  <h5 class="text-center">Guest Account</h5>
}
else
{
  <div class="form-row">
    <div class="col pr-0">
      <input readonly value="@Model.Customer.FirstName" class="form-control border-dark" />
    </div>
    <div class="col pl-0">
      <input readonly value="@Model.Customer.LastName" class="form-control border-dark" />
    </div>
  </div>
  <div class="form-row">
    <div class="col pr-0">
      <input readonly value="@Model.Customer.EmailAddress" class="form-control border-dark" />
    </div>
    <div class="col pl-0">
      <input readonly value="@Model.Customer.PhoneNumber" class="form-control border-dark" />
    </div>
  </div>
}

@if (Model.Transactions.Any())
{
  <h4 class="mt-5 text-center">Transactions</h4>

  foreach (TransactionModel transaction in Model.Transactions)
  {
    string method;
    string amount;

    @if (transaction.Method == MethodEnum.GiftCard)
    {
      GiftCardModel gc = Model.UsedAsPaymentGCs.FirstOrDefault(t => t.Id == transaction.GiftCardId);
      string last3Digits = gc.Code.Substring(gc.Code.Length - 3);
      method = $"{ transaction.Method } (****{ last3Digits })";
      amount = $"{transaction.Amount.ToString("C2")} ({gc.Amount.ToString("C2")})";
    }
    else
    {
      method = transaction.Method.ToString();
      amount = transaction.Amount.ToString("C2");
    }

    <div class="form-row">
      <div class="col pr-0">
        <input readonly value="@method" class="form-control" />
      </div>
      <div class="col px-0">
        <input readonly value="@amount" class="form-control" />
      </div>
      @if (transaction.Method == MethodEnum.Give)
      {
        <button disabled class="btn btn-dark"><i class="fas fa-trash-alt"></i></button>
      }
      else
      {
        <form method="post" asp-page-handler="DeleteTransaction" asp-route-transactionId="@transaction.Id">
          <button type="submit" class="btn btn-danger"><i class="fas fa-trash-alt"></i></button>
        </form>
      }
    </div>
  }
}

@await Component.InvokeAsync("PriceSummary", new { saleId = Model.SaleId })

<form method="post" asp-page-handler="UpdateHelperId" class="my-5">
  <div class="form-row d-flex justify-content-center align-items-end">
    <div class="form-group col-md-3">
      <label for="helperId">Did anyone help the customer?</label>
      <input id="helperId" name="helperId" class="form-control" placeholder="Enter Helper ID" />
    </div>
    <div class="form-group">
      <button type="submit" class="btn btn-primary">Update</button>
    </div>
  </div>
</form>

@await Component.InvokeAsync("Messages", new { saleId = Model.SaleId })