@page "{saleid:min(1)}"
@model NewAgePOS.Pages.Sale.CheckoutModel
@{
  ViewData["Title"] = "Sales Checkout";
  CultureInfo dollar = new CultureInfo("en-US");
}

<h1 class="font-weight-bold text-center my-3">@ViewData["Title"]</h1>

@if (TempData["Message"] != null)
{
  <div class="text-danger text-center">@TempData["Message"]</div>
}

@await Component.InvokeAsync("ItemList", new { saleId = @Model.SaleId })

<h4 class="mt-5 text-center">CUSTOMER INFO</h4>
@if (Model.Customer.EmailAddress == "guest@email.com")
{
  <h5 class="text-center">Guest Account</h5>
}
else
{
  <div class="form-row">
    <div class="col pr-0">
      <input readonly value="@Model.Customer.FirstName" class="form-control border-dark" />
    </div>
    <div class="col pl-0">
      <input readonly value="@Model.Customer.LastName" class="form-control border-dark" />
    </div>
  </div>
  <div class="form-row">
    <div class="col pr-0">
      <input readonly value="@Model.Customer.EmailAddress" class="form-control border-dark" />
    </div>
    <div class="col pl-0">
      <input readonly value="@Model.Customer.PhoneNumber" class="form-control border-dark" />
    </div>
  </div>
}

@if (Model.Transactions.Any())
{
  <h4 class="mt-5 text-center">Transactions</h4>

  foreach (TransactionModel transaction in Model.Transactions)
  {
    string method;

    @if (transaction.GiftCardId.HasValue)
    {
      string code = Model.GiftCards.FirstOrDefault(g => g.Id == transaction.GiftCardId).Code;
      method = $"{ transaction.Method } ({ code })";
    }
    else
    {
      method = transaction.Method.ToString();
    }

    <div class="form-row">
      <div class="col pr-0">
        <input readonly value="@method" class="form-control" />
      </div>
      <div class="col px-0">
        <input readonly value="@transaction.Amount.ToString("C2", dollar)" class="form-control" />
      </div>
      @if (transaction.Method == MethodEnum.Give)
      {
        <button disabled class="btn btn-dark"><i class="fas fa-trash-alt"></i></button>
      }
      else
      {
        <form method="post" asp-page-handler="DeleteTransaction" asp-route-transactionId="@transaction.Id">
          <button type="submit" class="btn btn-danger"><i class="fas fa-trash-alt"></i></button>
        </form>
      }
    </div>
  }
}

@await Component.InvokeAsync("PriceSummary", new { saleId = Model.SaleId })

@if (Model.IsZeroBalance)
{
  <form method="post" asp-page-handler="CompleteSale" class="mt-1 text-center">
    <button type="submit" class="btn btn-success">Complete Sale</button>
  </form>
}
else
{

  <h4 class="mt-5 text-center">PAYMENT</h4>

  <div class="row mb-3">
    <div class="col" style="text-align: center;">
      <button id="PaymentGiftCardButton"
              class="btn btn-primary"
              onclick="addRemove(this.id, 'PaymentOtherButton', 'GiveAmountButton');"
              style="display: inline-block;">
        Gift Card
      </button>

      <button id="PaymentOtherButton"
              class="btn btn-primary"
              onclick="addRemove(this.id, 'PaymentGiftCardButton', 'GiveAmountButton');"
              style="display: inline-block;">
        Other
      </button>

      <button id="GiveAmountButton"
              class="btn btn-primary"
              onclick="addRemove(this.id, 'PaymentGiftCardButton', 'PaymentOtherButton');"
              style="display: inline-block;">
        Give
      </button>
    </div>
  </div>

  <div id="PaymentGiftCard" style="display: none;">
    <form method="post" asp-page-handler="ApplyGiftCards">
      <div class="form-row mt-3">
        <div class="form-group col">
          <label asp-for="@Model.Checkout.GiftCardCodes"></label>
          <textarea asp-for="@Model.Checkout.GiftCardCodes" class="form-control" placeholder="Gift Card Codes"></textarea>
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Apply Gift Cards</button>
    </form>
  </div>

  <div id="PaymentOther" style="display: none;">
    <form method="post" asp-page-handler="ApplyPayment">
      <div class="form-row">
        <div class="form-group col">
          <label asp-for="@Model.Checkout.PaymentMethod"></label>
          <select asp-for="@Model.Checkout.PaymentMethod" class="form-control" asp-items="@Model.Checkout.PaymentMethods">
            <option value="">Choose...</option>
          </select>
        </div>
        <div class="form-group col">
          <label asp-for="@Model.Checkout.Amount"></label>
          <input asp-for="@Model.Checkout.Amount" class="form-control">
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Apply Payment</button>
    </form>
  </div>

  <div id="GiveAmount" style="display: none;">
    <form method="post" asp-page-handler="ApplyGiveAmount">
      <div class="form-row">
        <div class="form-group col">
          <label asp-for="@Model.Checkout.GiveAmount" class="col-form-label"></label>
          <input asp-for="@Model.Checkout.GiveAmount" class="form-control" />
        </div>
        <div class="form-group col">
          <label asp-for="@Model.Checkout.GiveAmountConfirmation" class="col-form-label"></label>
          <input asp-for="@Model.Checkout.GiveAmountConfirmation" class="form-control" />
          <span asp-validation-for="@Model.Checkout.GiveAmountConfirmation" class="text-danger"></span>
        </div>
      </div>
      <button type="submit" class="btn btn-danger">Apply Give Amount</button>
    </form>
  </div>
}