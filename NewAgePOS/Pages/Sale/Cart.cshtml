@page "{saleid:min(1)}"
@model NewAgePOS.Pages.CartModel
@{
  ViewData["Title"] = "Sales";
  CultureInfo dollar = new CultureInfo("en-US");
}

<h3>ADD PRODUCTS</h3>
@if (TempData["Message"] != null)
{
  <div class="text-danger">@TempData["Message"]</div>
}

<form method="post">
  <div class="form-group">
    <label asp-for="Codes"></label>
    <textarea asp-for="Codes" class="form-control" rows="3"></textarea>
  </div>
  <button asp-page-handler="Add" type="submit" class="btn btn-primary">Add</button>

  <h3 class="mt-5">PRODUCTS</h3>
  @if (Model.SaleLines != null && Model.SaleLines.Any())
  {
    @for (var i = 0; i < Model.SaleLines.Count; i++)
    {
      if (i != 0)
      {
        <div class="mt-5"></div>
      }

      <input hidden readonly asp-for="@Model.SaleLines[i].Id" />
      <div class="form-row">
        <div class="col">
          <input readonly asp-for="@Model.SaleLines[i].Sku" class="form-control">
        </div>
        <div class="col">
          <input readonly asp-for="@Model.SaleLines[i].Upc" class="form-control">
        </div>
      </div>
      <div class="form-row">
        <div class="col">
          <input readonly asp-for="@Model.SaleLines[i].AllName" class="form-control">
        </div>
      </div>
      <div class="form-row">
        <div class="col">
          <label asp-for="@Model.SaleLines[i].Cost"></label>
          <input hidden asp-for="@Model.SaleLines[i].Cost" class="form-control">
          <input readonly value="@Model.SaleLines[i].Cost.ToString("C2", dollar)" class="form-control">
        </div>
        <div class="col">
          <label asp-for="@Model.SaleLines[i].Price"></label>
          <input hidden asp-for="@Model.SaleLines[i].Price" class="form-control">
          <input readonly value="@Model.SaleLines[i].Price.ToString("C2", dollar)" class="form-control">
        </div>
        <div class="col">
          <label asp-for="@Model.SaleLines[i].Qty"></label>
          <input asp-for="@Model.SaleLines[i].Qty" class="form-control">
          <span asp-validation-for="@Model.SaleLines[i].Qty" class="text-danger"></span>
        </div>
      </div>
      <div class="form-row">
        <div class="col">
          <label asp-for="@Model.SaleLines[i].DiscAmt"></label>
          <input asp-for="@Model.SaleLines[i].DiscAmt" class="form-control">
          <span asp-validation-for="@Model.SaleLines[i].DiscAmt" class="text-danger"></span>
        </div>
        <div class="col">
          <label asp-for="@Model.SaleLines[i].DiscPct"></label>
          <input asp-for="@Model.SaleLines[i].DiscPct" class="form-control">
          <span asp-validation-for="@Model.SaleLines[i].DiscPct" class="text-danger"></span>
        </div>
      </div>
    }
    <button asp-page-handler="Update" type="submit" class="btn btn-primary mt-3">Update</button>
  }
</form>

@await Component.InvokeAsync("SalePriceSummary", new { saleLines = Model.SaleLines, taxPct = Model.TaxPct })

<div class="row mt-3">
  <a asp-page="/Sale/Guest" asp-route-saleid="@Model.SaleId" class="btn btn-success">Proceed</a>
  <form method="post" asp-page="Index" asp-page-handler="CancelSale" asp-route-saleid="SaleId" style="display: inline-block;">
    <button type="submit" class="btn btn-danger ml-1">Cancel Sale</button>
  </form>
</div>