@using NewAgePOS.ViewModels.ViewComponent
@using NewAgePOS.Utilities
@model ItemListVCVM

<h4 class="mt-5 text-center">ITEMS</h4>
@foreach (var item in Model.Items)
{
  if (item != Model.Items.First())
  {
    <div class="mt-3"></div>
  }

  if (item.IsProduct)
  {
    <div class="form-row">
      <div class="col pr-0">
        <input readonly value="@item.Sku" class="form-control" />
      </div>
      <div class="col pl-0">
        <input readonly value="@item.Upc" class="form-control" />
      </div>
    </div>
    <div class="form-row">
      <div class="col">
        <input readonly value="@item.AllName" class="form-control" />
      </div>
    </div>
    <div class="form-row">
      <div class="col-4 pr-0">
        <input readonly value="@item.Cost.ToString("C2", item.Dollar)" class="form-control" />
      </div>
      @if (item.DiscPct > 0)
      {
        float afterDisc = item.Price * (1 - (item.DiscPct / 100f));
        <div class="col px-0">
          <div class="form-control" style="background-color: #e9ecef;">
            <span class="small text-danger"><s>@item.Price.ToString("C2", item.Dollar)</s></span>
            <span>@afterDisc.ToString("C2", item.Dollar)</span>
          </div>
        </div>
      }
      else
      {
        <div class="col px-0">
          <input readonly value="@item.Price.ToString("C2", item.Dollar)" class="form-control" />
        </div>
      }
      <div class="col-2 pl-0">
        <input readonly value="@item.Qty" class="form-control" />
      </div>
    </div>
    @if (Model.PathSource == PathSourceEnum.Refund)
    {
      int refundedQty = Model.Refunds.Where(r => r.TransactionId != 0 && r.SaleLineId == item.SaleLineId).Sum(r => r.Qty);
      int refundingQty = Model.Refunds.Where(r => r.TransactionId == 0 && r.SaleLineId == item.SaleLineId).Sum(r => r.Qty);
      <div class="form-row">
        <div class="col pr-0">
          <input readonly value="@refundedQty" class="form-control" />
        </div>
        <div class="col pl-0">
          @if (refundedQty == item.Qty)
          {
            <input readonly value="Fully Refunded" class="form-control font-weight-bold text-info" />
          }
          else
          {
            <input readonly value="@refundingQty" class="form-control font-weight-bold text-info" />
          }
        </div>
      </div>
    }
  }
  else if (item.IsGiftCard)
  {
    string last3Digits = item.Sku.Substring(item.Sku.Length - 3);

    <div class="form-row">
      <div class="col-7 pr-0">
        <input readonly value="(Gift Card) ****@last3Digits" class="form-control" />
      </div>
      <div class="col px-0">
        <input readonly value="@item.Price.ToString("C2", item.Dollar)" class="form-control" />
      </div>
      <div class="col-2 pl-0">
        <input readonly value="@item.Qty" class="form-control" />
      </div>
    </div>
  }
  else
  {
    string price = (item.Price * -1).ToString("C2", item.Dollar);
    <div class="form-row">
      <div class="col-7 pr-0">
        <input readonly value="(Trade In) @item.SaleLineId" class="form-control" />
      </div>
      <div class="col px-0">
        <input readonly value="@price" class="form-control" />
      </div>
      <div class="col-2 px-0">
        <input readonly value="@item.Qty" class="form-control" />
      </div>
    </div>
  }

  @if (Model.PathSource == PathSourceEnum.Cart)
  {
    if (item.IsProduct)
    {
      <form method="post" asp-page="/Sale/Cart" asp-page-handler="ApplyDiscount" asp-route-SaleLineId="@item.SaleLineId" asp-route-qty="@item.Qty">
        <div class="form-row">
          <label class="col-form-label ml-3">Cart Discount %</label>
          <div class="col">
            <input name="discPct" value="@item.DiscPct" class="form-control text-info font-weight-bold" />
          </div>
          <div class="col">
            <button type="submit" class="col btn btn-primary" style="width: fit-content;">Apply</button>
          </div>
        </div>
      </form>
    }
  }
}