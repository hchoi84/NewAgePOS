********** DONE **********
- Centralize Product List view for consistency
 * Implement it on Cart
 * Implement it on Checkout
 * Implement it on Refund
- Round total down to 5 cents. Record the difference to DB as "Give"
- Product Search, don't display products with no inventory
- Include Cost and BCPrice on Product Search result. BCPrice show regular price, not the 15% discounted price.
- Trade-In. Have amount be entered twice for confirmation
- Sale/RefundReceipt: Incorporate this to use the same Receipt View
- Test Sale
	* Purchasing Product(s)
	* Purchasing GiftCard(s)
	* Purchasing Product(s) and GiftCard(s)
	* Ensure receipt shows correctly
- Test Refund
  * Refund through Cash
	* Refund through GiftCard
	* Ensure receipt shows correctly
- If test is good, delete RefundReceipt and ISQLData.GetRefundReceiptData
- Cancelling Sale: Validate to ensure sale can be cancelled. (!isComplete, no pending transactions associated with sale)
- Delete any Give Transaction associated with Sale since this is auto generated when the Checkout page is loaded. Therefore, it won't be possible to cancel the transaction prior to deleting it. Other transactions should be cancelled manually by the employee to ensure cancelling a sale by mistake when it could be on hold for later completion
- Bug: Give amount goes to negative
- Implement transaction cancelling
- Remove message from Transactions. All message should be stored in Sale. Change Sale message type to VARCHAR(300)

********** WORKING ON **********
- Implement message table that's linked to Sale

********** PENDING **********
- Centralize Price Summary view for consistency
	* Implement it on Receipt (Done)
	* Implement it on Refund Receipt (How to use the same receipt view??)
- Sale/Cart: Select Tax % to apply
	* Cash/GiftCard = 0%, CreditCard = default %
- Tax: Add with default selection (singleton)